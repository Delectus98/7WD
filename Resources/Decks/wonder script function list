//qui utilise la fonction:player/opponent/
//lorsque que le joueur "player" active un script l'opposant peut pouvoir agir

void gainMoney(int):player
void looseMoney(int):opponent

void replay():opponent

//not wonder cards
ACard getCardAmongTrash(CardType restriction):player //String[] = coins names
ACard getCardAmongVisible(CardType restriction):opponent
ACard getCardAmongHiden(CardType restriction):opponent
ACard getCardAmongNotUsed(CardType restriction):player
ACard getCardAmongPlayer(CardType restriction):opponent
ACard getCardAmongOpponent(CardType restriction):player
ACard getCardAmongPattern(... restrictionArea, CardType restriction):opponent
ACard getCardAmong(...)

//wonder cards
WonderCard getWonderNotYetBuiltPlayer(String[] restriction) //String[] = wonders names
WonderCard getWonderNotYetBuiltOpponent(String[] restriction) //String[] = wonders names

//all cards
void buildCard(ACard card)
void destroyCard(ACard card) //si c'est une merveille cela la déconstruit sinon dans la défausse
void sellCard(ACard card) // gagne de l'argent et dans la défausse
//l'option build/destroy/sell l'enlève le droit de propriété de son propriétaire ou zone initial(e)

//Coins
PCoin getCoinAmongHiden(String[] restriction) //String[] = coins names
PCoin getCoinAmongVisible(String[] restriction)
PCoin getCoinAmongOpponent(String[] restriction)
PCoin getCoinAmongPlayer(String[] restriction)

void destroyCoin(ACard):player //va dans la pile de coin de la partie
void buildCoin(ACard):player

//Military Taxes
Taxe getPlayerTaxes(int step)
Taxe getOpponentTaxes(int step)

void removeTaxes(Taxe)
void taxPlayer(Taxe)
void taxOpponent(Taxe)


